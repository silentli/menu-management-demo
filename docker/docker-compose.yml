version: '3.8'

services:
  nginx:
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - app_network

  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    restart: unless-stopped
    volumes:
      - ..:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ../menu_management/settings/env/.env
    environment:
      - DJANGO_SETTINGS_MODULE=menu_management.settings.production
      - DJANGO_ENV=production
    command: gunicorn menu_management.wsgi:application --bind 0.0.0.0:8000
    networks:
      - app_network

  db:
    image: postgres:14
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ../data:/docker-entrypoint-initdb.d/
    env_file:
      - ../menu_management/settings/env/.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume: 